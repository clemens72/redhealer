"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createAssistantResponseMutationInput = exports.createAssistantMutationField = exports.createMessageSubscription = exports.createMessageModel = void 0;
const graphql_directives_1 = require("@aws-amplify/graphql-directives");
const graphql_1 = require("graphql");
const graphql_transformer_common_1 = require("graphql-transformer-common");
const createMessageModel = (conversationName, messageName, referenceFieldName, conversationMessageInterface) => {
    const authDirective = constructMessageAuthDirective();
    const modelDirective = constructMessageModelDirective();
    const belongsToConversationDirective = constructMessageSessionFieldBelongsToDirective(referenceFieldName);
    const conversationField = constructMessageConversationField(belongsToConversationDirective, conversationName);
    const model = constructConversationMessageModel(messageName, conversationField, referenceFieldName, [modelDirective, authDirective], conversationMessageInterface);
    return {
        authDirective,
        modelDirective,
        belongsToConversationDirective,
        conversationField,
        model,
    };
};
exports.createMessageModel = createMessageModel;
const createMessageSubscription = (subscriptionName, conversationMessageTypeName, onMutationName) => {
    const awsSubscribeDirective = (0, graphql_transformer_common_1.makeDirective)('aws_subscribe', [(0, graphql_transformer_common_1.makeArgument)('mutations', (0, graphql_transformer_common_1.makeValueNode)([onMutationName]))]);
    const cognitoAuthDirective = (0, graphql_transformer_common_1.makeDirective)('aws_cognito_user_pools', []);
    const args = [(0, graphql_transformer_common_1.makeInputValueDefinition)('conversationId', (0, graphql_transformer_common_1.makeNamedType)('ID'))];
    const subscriptionField = (0, graphql_transformer_common_1.makeField)(subscriptionName, args, (0, graphql_transformer_common_1.makeNamedType)(conversationMessageTypeName), [
        awsSubscribeDirective,
        cognitoAuthDirective,
    ]);
    return subscriptionField;
};
exports.createMessageSubscription = createMessageSubscription;
const createAssistantMutationField = (fieldName, messageName, inputTypeName) => {
    const args = [(0, graphql_transformer_common_1.makeInputValueDefinition)('input', (0, graphql_transformer_common_1.makeNonNullType)((0, graphql_transformer_common_1.makeNamedType)(inputTypeName)))];
    const cognitoAuthDirective = (0, graphql_transformer_common_1.makeDirective)('aws_cognito_user_pools', []);
    const createAssistantResponseMutation = (0, graphql_transformer_common_1.makeField)(fieldName, args, (0, graphql_transformer_common_1.makeNamedType)(messageName), [cognitoAuthDirective]);
    return createAssistantResponseMutation;
};
exports.createAssistantMutationField = createAssistantMutationField;
const createAssistantResponseMutationInput = (messageName) => {
    const inputName = `Create${messageName}AssistantInput`;
    return {
        kind: 'InputObjectTypeDefinition',
        name: { kind: 'Name', value: inputName },
        fields: [
            (0, graphql_transformer_common_1.makeInputValueDefinition)('conversationId', (0, graphql_transformer_common_1.makeNamedType)('ID')),
            (0, graphql_transformer_common_1.makeInputValueDefinition)('content', (0, graphql_transformer_common_1.makeListType)((0, graphql_transformer_common_1.makeNamedType)('ContentBlockInput'))),
            (0, graphql_transformer_common_1.makeInputValueDefinition)('associatedUserMessageId', (0, graphql_transformer_common_1.makeNamedType)('ID')),
        ],
    };
};
exports.createAssistantResponseMutationInput = createAssistantResponseMutationInput;
const constructMessageModelDirective = () => {
    return (0, graphql_transformer_common_1.makeDirective)('model', [
        (0, graphql_transformer_common_1.makeArgument)('subscriptions', (0, graphql_transformer_common_1.makeValueNode)({ onUpdate: null, onDelete: null })),
        (0, graphql_transformer_common_1.makeArgument)('mutations', (0, graphql_transformer_common_1.makeValueNode)({ update: null })),
    ]);
};
const constructMessageAuthDirective = () => {
    return (0, graphql_transformer_common_1.makeDirective)('auth', [
        (0, graphql_transformer_common_1.makeArgument)('rules', {
            kind: graphql_1.Kind.LIST,
            values: [
                {
                    kind: graphql_1.Kind.OBJECT,
                    fields: [
                        {
                            kind: graphql_1.Kind.OBJECT_FIELD,
                            name: { kind: graphql_1.Kind.NAME, value: 'allow' },
                            value: { kind: graphql_1.Kind.ENUM, value: 'owner' },
                        },
                        {
                            kind: graphql_1.Kind.OBJECT_FIELD,
                            name: { kind: graphql_1.Kind.NAME, value: 'ownerField' },
                            value: { kind: graphql_1.Kind.STRING, value: 'owner' },
                        },
                    ],
                },
            ],
        }),
    ]);
};
const constructMessageSessionFieldBelongsToDirective = (referenceFieldName) => {
    const referencesArg = (0, graphql_transformer_common_1.makeArgument)('references', (0, graphql_transformer_common_1.makeValueNode)(referenceFieldName));
    return (0, graphql_transformer_common_1.makeDirective)(graphql_directives_1.BelongsToDirective.name, [referencesArg]);
};
const constructMessageConversationField = (belongsToDirective, typeName) => {
    return (0, graphql_transformer_common_1.makeField)('conversation', [], (0, graphql_transformer_common_1.makeNamedType)(typeName), [belongsToDirective]);
};
const constructConversationMessageModel = (modelName, conversationField, referenceFieldName, typeDirectives, conversationMessageInterface) => {
    const id = (0, graphql_transformer_common_1.makeField)('id', [], (0, graphql_transformer_common_1.wrapNonNull)((0, graphql_transformer_common_1.makeNamedType)('ID')));
    const conversationId = (0, graphql_transformer_common_1.makeField)(referenceFieldName, [], (0, graphql_transformer_common_1.wrapNonNull)((0, graphql_transformer_common_1.makeNamedType)('ID')));
    const role = (0, graphql_transformer_common_1.makeField)('role', [], (0, graphql_transformer_common_1.makeNamedType)('ConversationParticipantRole'));
    const content = (0, graphql_transformer_common_1.makeField)('content', [], (0, graphql_transformer_common_1.makeListType)((0, graphql_transformer_common_1.makeNamedType)('ContentBlock')));
    const context = (0, graphql_transformer_common_1.makeField)('aiContext', [], (0, graphql_transformer_common_1.makeNamedType)('AWSJSON'));
    const uiComponents = (0, graphql_transformer_common_1.makeField)('toolConfiguration', [], (0, graphql_transformer_common_1.makeNamedType)('ToolConfiguration'));
    const associatedUserMessageId = (0, graphql_transformer_common_1.makeField)('associatedUserMessageId', [], (0, graphql_transformer_common_1.makeNamedType)('ID'));
    const object = {
        ...(0, graphql_transformer_common_1.blankObject)(modelName),
        interfaces: [conversationMessageInterface],
        fields: [id, conversationId, conversationField, role, content, context, uiComponents, associatedUserMessageId],
        directives: typeDirectives,
    };
    return object;
};
//# sourceMappingURL=message-model.js.map